export const LendingHook = [
  {
    inputs: [
      { internalType: 'contract IPoolManager', name: '_poolManager', type: 'address' },
      { internalType: 'address', name: '_owner', type: 'address' },
      { internalType: 'string', name: '_nftName', type: 'string' },
      { internalType: 'string', name: '_nftSymbol', type: 'string' },
      { internalType: 'uint256', name: '_liquidationLimit', type: 'uint256' },
      { internalType: 'uint256', name: '_liquidationThreshold', type: 'uint256' },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  { inputs: [], name: 'AccountLiquidatedNoNewCollateral', type: 'error' },
  { inputs: [], name: 'HookNotImplemented', type: 'error' },
  { inputs: [], name: 'NotPoolManager', type: 'error' },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'owner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'spender', type: 'address' },
      { indexed: true, internalType: 'uint256', name: 'id', type: 'uint256' },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'owner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'operator', type: 'address' },
      { indexed: false, internalType: 'bool', name: 'approved', type: 'bool' },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  { anonymous: false, inputs: [], name: 'LogBorrow', type: 'event' },
  { anonymous: false, inputs: [], name: 'LogLiquidation', type: 'event' },
  { anonymous: false, inputs: [], name: 'LogRepay', type: 'event' },
  { anonymous: false, inputs: [], name: 'LogSupply', type: 'event' },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'PoolId', name: 'keyId', type: 'bytes32' },
      { indexed: false, internalType: 'int256', name: 'oldTopMostTick', type: 'int256' },
      { indexed: false, internalType: 'int256', name: 'updatedTopMostTick', type: 'int256' },
    ],
    name: 'LogTopMostTickModified',
    type: 'event',
  },
  { anonymous: false, inputs: [], name: 'LogWithdraw', type: 'event' },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'from', type: 'address' },
      { indexed: true, internalType: 'address', name: 'to', type: 'address' },
      { indexed: true, internalType: 'uint256', name: 'id', type: 'uint256' },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [],
    name: 'ADJUSTMENT_CONSTANT_X96',
    outputs: [{ internalType: 'int256', name: '', type: 'int256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LIQUIDATION_MAX_LIMIT',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LIQUIDATION_THRESHOLD',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'int24', name: '_oldTick', type: 'int24' },
      { internalType: 'int24', name: '_newTick', type: 'int24' },
      { internalType: 'int256', name: '_oldTickAdjustmentFactor', type: 'int256' },
    ],
    name: '_getRatioTickAdjustmentFactorX96',
    outputs: [{ internalType: 'int256', name: '', type: 'int256' }],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'int24', name: 'actualTick', type: 'int24' },
      { internalType: 'int24', name: 'tickSpacing', type: 'int24' },
    ],
    name: '_getTickLower',
    outputs: [{ internalType: 'int24', name: '', type: 'int24' }],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'Currency', name: 'currency0', type: 'address' },
          { internalType: 'Currency', name: 'currency1', type: 'address' },
          { internalType: 'uint24', name: 'fee', type: 'uint24' },
          { internalType: 'int24', name: 'tickSpacing', type: 'int24' },
          { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
        ],
        internalType: 'struct PoolKey',
        name: '_key',
        type: 'tuple',
      },
    ],
    name: 'absorbBadDebt',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'sender', type: 'address' },
      {
        components: [
          { internalType: 'Currency', name: 'currency0', type: 'address' },
          { internalType: 'Currency', name: 'currency1', type: 'address' },
          { internalType: 'uint24', name: 'fee', type: 'uint24' },
          { internalType: 'int24', name: 'tickSpacing', type: 'int24' },
          { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
        ],
        internalType: 'struct PoolKey',
        name: 'key',
        type: 'tuple',
      },
      {
        components: [
          { internalType: 'int24', name: 'tickLower', type: 'int24' },
          { internalType: 'int24', name: 'tickUpper', type: 'int24' },
          { internalType: 'int256', name: 'liquidityDelta', type: 'int256' },
          { internalType: 'bytes32', name: 'salt', type: 'bytes32' },
        ],
        internalType: 'struct ModifyLiquidityParams',
        name: 'params',
        type: 'tuple',
      },
      { internalType: 'BalanceDelta', name: 'delta', type: 'int256' },
      { internalType: 'BalanceDelta', name: 'feesAccrued', type: 'int256' },
      { internalType: 'bytes', name: 'hookData', type: 'bytes' },
    ],
    name: 'afterAddLiquidity',
    outputs: [
      { internalType: 'bytes4', name: '', type: 'bytes4' },
      { internalType: 'BalanceDelta', name: '', type: 'int256' },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'sender', type: 'address' },
      {
        components: [
          { internalType: 'Currency', name: 'currency0', type: 'address' },
          { internalType: 'Currency', name: 'currency1', type: 'address' },
          { internalType: 'uint24', name: 'fee', type: 'uint24' },
          { internalType: 'int24', name: 'tickSpacing', type: 'int24' },
          { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
        ],
        internalType: 'struct PoolKey',
        name: 'key',
        type: 'tuple',
      },
      { internalType: 'uint256', name: 'amount0', type: 'uint256' },
      { internalType: 'uint256', name: 'amount1', type: 'uint256' },
      { internalType: 'bytes', name: 'hookData', type: 'bytes' },
    ],
    name: 'afterDonate',
    outputs: [{ internalType: 'bytes4', name: '', type: 'bytes4' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'sender', type: 'address' },
      {
        components: [
          { internalType: 'Currency', name: 'currency0', type: 'address' },
          { internalType: 'Currency', name: 'currency1', type: 'address' },
          { internalType: 'uint24', name: 'fee', type: 'uint24' },
          { internalType: 'int24', name: 'tickSpacing', type: 'int24' },
          { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
        ],
        internalType: 'struct PoolKey',
        name: 'key',
        type: 'tuple',
      },
      { internalType: 'uint160', name: 'sqrtPriceX96', type: 'uint160' },
      { internalType: 'int24', name: 'tick', type: 'int24' },
    ],
    name: 'afterInitialize',
    outputs: [{ internalType: 'bytes4', name: '', type: 'bytes4' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'sender', type: 'address' },
      {
        components: [
          { internalType: 'Currency', name: 'currency0', type: 'address' },
          { internalType: 'Currency', name: 'currency1', type: 'address' },
          { internalType: 'uint24', name: 'fee', type: 'uint24' },
          { internalType: 'int24', name: 'tickSpacing', type: 'int24' },
          { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
        ],
        internalType: 'struct PoolKey',
        name: 'key',
        type: 'tuple',
      },
      {
        components: [
          { internalType: 'int24', name: 'tickLower', type: 'int24' },
          { internalType: 'int24', name: 'tickUpper', type: 'int24' },
          { internalType: 'int256', name: 'liquidityDelta', type: 'int256' },
          { internalType: 'bytes32', name: 'salt', type: 'bytes32' },
        ],
        internalType: 'struct ModifyLiquidityParams',
        name: 'params',
        type: 'tuple',
      },
      { internalType: 'BalanceDelta', name: 'delta', type: 'int256' },
      { internalType: 'BalanceDelta', name: 'feesAccrued', type: 'int256' },
      { internalType: 'bytes', name: 'hookData', type: 'bytes' },
    ],
    name: 'afterRemoveLiquidity',
    outputs: [
      { internalType: 'bytes4', name: '', type: 'bytes4' },
      { internalType: 'BalanceDelta', name: '', type: 'int256' },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'sender', type: 'address' },
      {
        components: [
          { internalType: 'Currency', name: 'currency0', type: 'address' },
          { internalType: 'Currency', name: 'currency1', type: 'address' },
          { internalType: 'uint24', name: 'fee', type: 'uint24' },
          { internalType: 'int24', name: 'tickSpacing', type: 'int24' },
          { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
        ],
        internalType: 'struct PoolKey',
        name: 'key',
        type: 'tuple',
      },
      {
        components: [
          { internalType: 'bool', name: 'zeroForOne', type: 'bool' },
          { internalType: 'int256', name: 'amountSpecified', type: 'int256' },
          { internalType: 'uint160', name: 'sqrtPriceLimitX96', type: 'uint160' },
        ],
        internalType: 'struct SwapParams',
        name: 'params',
        type: 'tuple',
      },
      { internalType: 'BalanceDelta', name: 'delta', type: 'int256' },
      { internalType: 'bytes', name: 'hookData', type: 'bytes' },
    ],
    name: 'afterSwap',
    outputs: [
      { internalType: 'bytes4', name: '', type: 'bytes4' },
      { internalType: 'int128', name: '', type: 'int128' },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'spender', type: 'address' },
      { internalType: 'uint256', name: 'id', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'sender', type: 'address' },
      {
        components: [
          { internalType: 'Currency', name: 'currency0', type: 'address' },
          { internalType: 'Currency', name: 'currency1', type: 'address' },
          { internalType: 'uint24', name: 'fee', type: 'uint24' },
          { internalType: 'int24', name: 'tickSpacing', type: 'int24' },
          { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
        ],
        internalType: 'struct PoolKey',
        name: 'key',
        type: 'tuple',
      },
      {
        components: [
          { internalType: 'int24', name: 'tickLower', type: 'int24' },
          { internalType: 'int24', name: 'tickUpper', type: 'int24' },
          { internalType: 'int256', name: 'liquidityDelta', type: 'int256' },
          { internalType: 'bytes32', name: 'salt', type: 'bytes32' },
        ],
        internalType: 'struct ModifyLiquidityParams',
        name: 'params',
        type: 'tuple',
      },
      { internalType: 'bytes', name: 'hookData', type: 'bytes' },
    ],
    name: 'beforeAddLiquidity',
    outputs: [{ internalType: 'bytes4', name: '', type: 'bytes4' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'sender', type: 'address' },
      {
        components: [
          { internalType: 'Currency', name: 'currency0', type: 'address' },
          { internalType: 'Currency', name: 'currency1', type: 'address' },
          { internalType: 'uint24', name: 'fee', type: 'uint24' },
          { internalType: 'int24', name: 'tickSpacing', type: 'int24' },
          { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
        ],
        internalType: 'struct PoolKey',
        name: 'key',
        type: 'tuple',
      },
      { internalType: 'uint256', name: 'amount0', type: 'uint256' },
      { internalType: 'uint256', name: 'amount1', type: 'uint256' },
      { internalType: 'bytes', name: 'hookData', type: 'bytes' },
    ],
    name: 'beforeDonate',
    outputs: [{ internalType: 'bytes4', name: '', type: 'bytes4' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'sender', type: 'address' },
      {
        components: [
          { internalType: 'Currency', name: 'currency0', type: 'address' },
          { internalType: 'Currency', name: 'currency1', type: 'address' },
          { internalType: 'uint24', name: 'fee', type: 'uint24' },
          { internalType: 'int24', name: 'tickSpacing', type: 'int24' },
          { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
        ],
        internalType: 'struct PoolKey',
        name: 'key',
        type: 'tuple',
      },
      { internalType: 'uint160', name: 'sqrtPriceX96', type: 'uint160' },
    ],
    name: 'beforeInitialize',
    outputs: [{ internalType: 'bytes4', name: '', type: 'bytes4' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'sender', type: 'address' },
      {
        components: [
          { internalType: 'Currency', name: 'currency0', type: 'address' },
          { internalType: 'Currency', name: 'currency1', type: 'address' },
          { internalType: 'uint24', name: 'fee', type: 'uint24' },
          { internalType: 'int24', name: 'tickSpacing', type: 'int24' },
          { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
        ],
        internalType: 'struct PoolKey',
        name: 'key',
        type: 'tuple',
      },
      {
        components: [
          { internalType: 'int24', name: 'tickLower', type: 'int24' },
          { internalType: 'int24', name: 'tickUpper', type: 'int24' },
          { internalType: 'int256', name: 'liquidityDelta', type: 'int256' },
          { internalType: 'bytes32', name: 'salt', type: 'bytes32' },
        ],
        internalType: 'struct ModifyLiquidityParams',
        name: 'params',
        type: 'tuple',
      },
      { internalType: 'bytes', name: 'hookData', type: 'bytes' },
    ],
    name: 'beforeRemoveLiquidity',
    outputs: [{ internalType: 'bytes4', name: '', type: 'bytes4' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'sender', type: 'address' },
      {
        components: [
          { internalType: 'Currency', name: 'currency0', type: 'address' },
          { internalType: 'Currency', name: 'currency1', type: 'address' },
          { internalType: 'uint24', name: 'fee', type: 'uint24' },
          { internalType: 'int24', name: 'tickSpacing', type: 'int24' },
          { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
        ],
        internalType: 'struct PoolKey',
        name: 'key',
        type: 'tuple',
      },
      {
        components: [
          { internalType: 'bool', name: 'zeroForOne', type: 'bool' },
          { internalType: 'int256', name: 'amountSpecified', type: 'int256' },
          { internalType: 'uint160', name: 'sqrtPriceLimitX96', type: 'uint160' },
        ],
        internalType: 'struct SwapParams',
        name: 'params',
        type: 'tuple',
      },
      { internalType: 'bytes', name: 'hookData', type: 'bytes' },
    ],
    name: 'beforeSwap',
    outputs: [
      { internalType: 'bytes4', name: '', type: 'bytes4' },
      { internalType: 'BeforeSwapDelta', name: '', type: 'int256' },
      { internalType: 'uint24', name: '', type: 'uint24' },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: '_nftId', type: 'uint256' },
      {
        components: [
          { internalType: 'Currency', name: 'currency0', type: 'address' },
          { internalType: 'Currency', name: 'currency1', type: 'address' },
          { internalType: 'uint24', name: 'fee', type: 'uint24' },
          { internalType: 'int24', name: 'tickSpacing', type: 'int24' },
          { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
        ],
        internalType: 'struct PoolKey',
        name: '_key',
        type: 'tuple',
      },
      { internalType: 'uint256', name: '_amt', type: 'uint256' },
    ],
    name: 'borrow',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'Currency', name: 'currency0', type: 'address' },
          { internalType: 'Currency', name: 'currency1', type: 'address' },
          { internalType: 'uint24', name: 'fee', type: 'uint24' },
          { internalType: 'int24', name: 'tickSpacing', type: 'int24' },
          { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
        ],
        internalType: 'struct PoolKey',
        name: '_key',
        type: 'tuple',
      },
      { internalType: 'address', name: '_user', type: 'address' },
    ],
    name: 'displayEarnPosition',
    outputs: [
      {
        components: [{ internalType: 'uint256', name: 'deposited', type: 'uint256' }],
        internalType: 'struct Variables.Liquidity',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'Currency', name: 'currency0', type: 'address' },
          { internalType: 'Currency', name: 'currency1', type: 'address' },
          { internalType: 'uint24', name: 'fee', type: 'uint24' },
          { internalType: 'int24', name: 'tickSpacing', type: 'int24' },
          { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
        ],
        internalType: 'struct PoolKey',
        name: '_key',
        type: 'tuple',
      },
      { internalType: 'uint256', name: '_amt', type: 'uint256' },
      { internalType: 'address', name: '_receiver', type: 'address' },
    ],
    name: 'earn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: '_nftId', type: 'uint256' },
      { internalType: 'PoolId', name: '_keyId', type: 'bytes32' },
    ],
    name: 'fetchPosition',
    outputs: [
      {
        components: [
          { internalType: 'bool', name: 'isFullyLiquidated', type: 'bool' },
          { internalType: 'uint256', name: 'collateralAmt', type: 'uint256' },
          { internalType: 'uint256', name: 'borrowedAmt', type: 'uint256' },
        ],
        internalType: 'struct Variables.LatestPositionData',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_user', type: 'address' }],
    name: 'getHookData',
    outputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getHookPermissions',
    outputs: [
      {
        components: [
          { internalType: 'bool', name: 'beforeInitialize', type: 'bool' },
          { internalType: 'bool', name: 'afterInitialize', type: 'bool' },
          { internalType: 'bool', name: 'beforeAddLiquidity', type: 'bool' },
          { internalType: 'bool', name: 'afterAddLiquidity', type: 'bool' },
          { internalType: 'bool', name: 'beforeRemoveLiquidity', type: 'bool' },
          { internalType: 'bool', name: 'afterRemoveLiquidity', type: 'bool' },
          { internalType: 'bool', name: 'beforeSwap', type: 'bool' },
          { internalType: 'bool', name: 'afterSwap', type: 'bool' },
          { internalType: 'bool', name: 'beforeDonate', type: 'bool' },
          { internalType: 'bool', name: 'afterDonate', type: 'bool' },
          { internalType: 'bool', name: 'beforeSwapReturnDelta', type: 'bool' },
          { internalType: 'bool', name: 'afterSwapReturnDelta', type: 'bool' },
          { internalType: 'bool', name: 'afterAddLiquidityReturnDelta', type: 'bool' },
          { internalType: 'bool', name: 'afterRemoveLiquidityReturnDelta', type: 'bool' },
        ],
        internalType: 'struct Hooks.Permissions',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'PoolId', name: '_keyId', type: 'bytes32' }],
    name: 'getPrice',
    outputs: [{ internalType: 'int256', name: 'priceX96', type: 'int256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'initialPrice_X96',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'address', name: '', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'liquidationLimit',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'liquidationThreshold',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'PoolId', name: 'poolId', type: 'bytes32' },
      { internalType: 'address', name: '', type: 'address' },
    ],
    name: 'liquidity',
    outputs: [{ internalType: 'uint256', name: 'deposited', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'PoolId', name: '', type: 'bytes32' }],
    name: 'maxDeviation',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'bool', name: 'reEntrancy', type: 'bool' },
          { internalType: 'bool', name: 'currentBranchLiquidated', type: 'bool' },
          { internalType: 'int256', name: 'topMostTick', type: 'int256' },
          { internalType: 'int32', name: 'currentBranchIds', type: 'int32' },
          { internalType: 'int32', name: 'totalBranchIds', type: 'int32' },
          { internalType: 'int64', name: 'totalSupply', type: 'int64' },
          { internalType: 'int64', name: 'totalBorrow', type: 'int64' },
          { internalType: 'int32', name: 'totalPositions', type: 'int32' },
          { internalType: 'int256', name: 'tickAdjustmentFactor', type: 'int256' },
        ],
        internalType: 'struct Variables.VaultVariablesState',
        name: '_vaultVariablesState',
        type: 'tuple',
      },
      {
        components: [
          { internalType: 'Currency', name: 'currency0', type: 'address' },
          { internalType: 'Currency', name: 'currency1', type: 'address' },
          { internalType: 'uint24', name: 'fee', type: 'uint24' },
          { internalType: 'int24', name: 'tickSpacing', type: 'int24' },
          { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
        ],
        internalType: 'struct PoolKey',
        name: '_key',
        type: 'tuple',
      },
    ],
    name: 'modifyVaultVariables',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'PoolId', name: '', type: 'bytes32' }],
    name: 'oracleAddress',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'id', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ internalType: 'address', name: 'owner', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'poolManager',
    outputs: [{ internalType: 'contract IPoolManager', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'PoolId', name: 'poolId', type: 'bytes32' },
      { internalType: 'uint256', name: '', type: 'uint256' },
    ],
    name: 'positionData',
    outputs: [
      { internalType: 'bool', name: 'isInitialized', type: 'bool' },
      { internalType: 'bool', name: 'isSupply', type: 'bool' },
      { internalType: 'int256', name: 'userTick', type: 'int256' },
      { internalType: 'uint256', name: 'userTickId', type: 'uint256' },
      { internalType: 'uint256', name: 'supplyAmount', type: 'uint256' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  { inputs: [], name: 'repay', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [
      { internalType: 'address', name: 'from', type: 'address' },
      { internalType: 'address', name: 'to', type: 'address' },
      { internalType: 'uint256', name: 'id', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'from', type: 'address' },
      { internalType: 'address', name: 'to', type: 'address' },
      { internalType: 'uint256', name: 'id', type: 'uint256' },
      { internalType: 'bytes', name: 'data', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'operator', type: 'address' },
      { internalType: 'bool', name: 'approved', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'PoolId', name: '_keyId', type: 'bytes32' },
      { internalType: 'address', name: '_oracle', type: 'address' },
      { internalType: 'uint256', name: '_maxDeviationFromOracle', type: 'uint256' },
    ],
    name: 'setOracle',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: '_nftId', type: 'uint256' },
      {
        components: [
          { internalType: 'Currency', name: 'currency0', type: 'address' },
          { internalType: 'Currency', name: 'currency1', type: 'address' },
          { internalType: 'uint24', name: 'fee', type: 'uint24' },
          { internalType: 'int24', name: 'tickSpacing', type: 'int24' },
          { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
        ],
        internalType: 'struct PoolKey',
        name: '_key',
        type: 'tuple',
      },
      { internalType: 'uint256', name: '_amt', type: 'uint256' },
    ],
    name: 'supply',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'PoolId', name: 'poolId', type: 'bytes32' },
      { internalType: 'int256', name: '', type: 'int256' },
    ],
    name: 'tickData',
    outputs: [
      { internalType: 'bool', name: 'isLiquidated', type: 'bool' },
      { internalType: 'uint24', name: 'totalIds', type: 'uint24' },
      { internalType: 'uint256', name: 'rawDebt', type: 'uint256' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'PoolId', name: 'poolId', type: 'bytes32' },
      { internalType: 'int256', name: '', type: 'int256' },
    ],
    name: 'tickHasDebt',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'PoolId', name: 'poolId', type: 'bytes32' },
      { internalType: 'int256', name: '', type: 'int256' },
      { internalType: 'uint256', name: '', type: 'uint256' },
    ],
    name: 'tickId',
    outputs: [{ internalType: 'bool', name: 'isFullyLiquidated', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'from', type: 'address' },
      { internalType: 'address', name: 'to', type: 'address' },
      { internalType: 'uint256', name: 'id', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'PoolId', name: 'poolId', type: 'bytes32' }],
    name: 'vaultVariables',
    outputs: [
      { internalType: 'bool', name: 'reEntrancy', type: 'bool' },
      { internalType: 'bool', name: 'currentBranchLiquidated', type: 'bool' },
      { internalType: 'int256', name: 'topMostTick', type: 'int256' },
      { internalType: 'int32', name: 'currentBranchIds', type: 'int32' },
      { internalType: 'int32', name: 'totalBranchIds', type: 'int32' },
      { internalType: 'int64', name: 'totalSupply', type: 'int64' },
      { internalType: 'int64', name: 'totalBorrow', type: 'int64' },
      { internalType: 'int32', name: 'totalPositions', type: 'int32' },
      { internalType: 'int256', name: 'tickAdjustmentFactor', type: 'int256' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'PoolId', name: 'poolId', type: 'bytes32' }],
    name: 'vaultVariablesConfig',
    outputs: [
      { internalType: 'uint16', name: 'supplyRateMagnifier', type: 'uint16' },
      { internalType: 'uint16', name: 'borrowRateMagnifier', type: 'uint16' },
      { internalType: 'uint16', name: 'collateralFactor', type: 'uint16' },
      { internalType: 'uint16', name: 'liquidationThreshold', type: 'uint16' },
      { internalType: 'uint16', name: 'liquidationMaxLimit', type: 'uint16' },
      { internalType: 'uint16', name: 'withdrawGap', type: 'uint16' },
      { internalType: 'uint16', name: 'liquidationPenalty', type: 'uint16' },
      { internalType: 'uint16', name: 'borrowFee', type: 'uint16' },
      { internalType: 'uint40', name: 'lastUpdateTimestamp', type: 'uint40' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  { inputs: [], name: 'withdraw', outputs: [], stateMutability: 'nonpayable', type: 'function' },
] as const;
